module fir_filter #(
    parameter N = 4,                      
    parameter DATA_WIDTH = 16,
    parameter COEFF_WIDTH = 16
)(
    input clk,
    input rst,
    input signed [DATA_WIDTH-1:0] din,
    output reg signed [DATA_WIDTH+COEFF_WIDTH-1:0] dout
);

  
    parameter signed [COEFF_WIDTH-1:0] coeff [0:N-1] = {16'd8192, 16'd8192, 16'd8192, 16'd8192}; // 0.25 in Q15

    reg signed [DATA_WIDTH-1:0] shift_reg [0:N-1];
    integer i;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            for (i = 0; i < N; i = i + 1) begin
                shift_reg[i] <= 0;
            end
            dout <= 0;
        end else begin
            // Shift register
            for (i = N-1; i > 0; i = i - 1)
                shift_reg[i] <= shift_reg[i-1];
            shift_reg[0] <= din;

            // FIR calculation
            dout <= 0;
            for (i = 0; i < N; i = i + 1)
                dout <= dout + shift_reg[i] * coeff[i];
        end
    end
endmodule
